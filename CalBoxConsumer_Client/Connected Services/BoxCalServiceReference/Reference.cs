//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalBoxConsumer_Client.BoxCalServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BoxCalRequest", Namespace="http://schemas.datacontract.org/2004/07/BoxVolumeCalTrialExameASW")]
    [System.SerializableAttribute()]
    public partial class BoxCalRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Request {
            get {
                return this.RequestField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestField, value) != true)) {
                    this.RequestField = value;
                    this.RaisePropertyChanged("Request");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BoxCalServiceReference.IBoxCalService")]
    public interface IBoxCalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoxCalService/GetVolume", ReplyAction="http://tempuri.org/IBoxCalService/GetVolumeResponse")]
        double GetVolume(double length, double width, double height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoxCalService/GetVolume", ReplyAction="http://tempuri.org/IBoxCalService/GetVolumeResponse")]
        System.Threading.Tasks.Task<double> GetVolumeAsync(double length, double width, double height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoxCalService/GetSide", ReplyAction="http://tempuri.org/IBoxCalService/GetSideResponse")]
        double GetSide(double volume, double side1, double side2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoxCalService/GetSide", ReplyAction="http://tempuri.org/IBoxCalService/GetSideResponse")]
        System.Threading.Tasks.Task<double> GetSideAsync(double volume, double side1, double side2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoxCalService/InsertBoxCalRequest", ReplyAction="http://tempuri.org/IBoxCalService/InsertBoxCalRequestResponse")]
        void InsertBoxCalRequest(string request, double volume, double length, double width, double height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoxCalService/InsertBoxCalRequest", ReplyAction="http://tempuri.org/IBoxCalService/InsertBoxCalRequestResponse")]
        System.Threading.Tasks.Task InsertBoxCalRequestAsync(string request, double volume, double length, double width, double height);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoxCalService/GetAllRequest", ReplyAction="http://tempuri.org/IBoxCalService/GetAllRequestResponse")]
        CalBoxConsumer_Client.BoxCalServiceReference.BoxCalRequest[] GetAllRequest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBoxCalService/GetAllRequest", ReplyAction="http://tempuri.org/IBoxCalService/GetAllRequestResponse")]
        System.Threading.Tasks.Task<CalBoxConsumer_Client.BoxCalServiceReference.BoxCalRequest[]> GetAllRequestAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBoxCalServiceChannel : CalBoxConsumer_Client.BoxCalServiceReference.IBoxCalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BoxCalServiceClient : System.ServiceModel.ClientBase<CalBoxConsumer_Client.BoxCalServiceReference.IBoxCalService>, CalBoxConsumer_Client.BoxCalServiceReference.IBoxCalService {
        
        public BoxCalServiceClient() {
        }
        
        public BoxCalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BoxCalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BoxCalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BoxCalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double GetVolume(double length, double width, double height) {
            return base.Channel.GetVolume(length, width, height);
        }
        
        public System.Threading.Tasks.Task<double> GetVolumeAsync(double length, double width, double height) {
            return base.Channel.GetVolumeAsync(length, width, height);
        }
        
        public double GetSide(double volume, double side1, double side2) {
            return base.Channel.GetSide(volume, side1, side2);
        }
        
        public System.Threading.Tasks.Task<double> GetSideAsync(double volume, double side1, double side2) {
            return base.Channel.GetSideAsync(volume, side1, side2);
        }
        
        public void InsertBoxCalRequest(string request, double volume, double length, double width, double height) {
            base.Channel.InsertBoxCalRequest(request, volume, length, width, height);
        }
        
        public System.Threading.Tasks.Task InsertBoxCalRequestAsync(string request, double volume, double length, double width, double height) {
            return base.Channel.InsertBoxCalRequestAsync(request, volume, length, width, height);
        }
        
        public CalBoxConsumer_Client.BoxCalServiceReference.BoxCalRequest[] GetAllRequest() {
            return base.Channel.GetAllRequest();
        }
        
        public System.Threading.Tasks.Task<CalBoxConsumer_Client.BoxCalServiceReference.BoxCalRequest[]> GetAllRequestAsync() {
            return base.Channel.GetAllRequestAsync();
        }
    }
}
